When would you want to use a remote repository rather than keeping all your work local?
> When you work from multiple workstations for you to be able to sync the content on them all with the latest version.
> When you are collaborating with other peers in the development of a project.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
> If it was to do it manually it could conflict with any current work you haven't finished just yet. Also, it could mean quite an amount of information that
we don't need just yet, and we can leave the sync for later.


Describe the differences between forks, clones, and branches. When would you use one instead of another?
> Forks and clones are pretty much the same operation the copy an entire repository, the difference being
where the copied version is saved, the clone copies the repository on a local computer from a remote
repository; the fork operation copies the repositories between GitHub accounts on the github servers.
> Branches are logical deviations form the main code course that implement changes from a specific point in time, allowing
developers to work on new features or fixes, without modifying the main code as it allows to work with different versions of the code.

What is the benefit of having a copy of the last known state of the remote stored locally?
> Git will use it to compare the changes that have been added to the remote repository and the ones
we added by our own, and will decide how to better perform the sync according to the differences
between the local and remote repositories. 
